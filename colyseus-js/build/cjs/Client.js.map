{"version":3,"file":"Client.js","sources":["../../src/Client.ts"],"sourcesContent":["import { post, get } from \"httpie\";\n\nimport { ServerError } from \"./errors/ServerError\";\nimport { Room, RoomAvailable } from \"./Room\";\nimport { Auth } from \"./Auth\";\nimport { SchemaConstructor } from \"./serializer/SchemaSerializer\";\n\nexport type JoinOptions = any;\n\nexport class MatchMakeError extends Error {\n    code: number;\n    constructor(message: string, code: number) {\n        super(message);\n        this.code = code;\n        Object.setPrototypeOf(this, MatchMakeError.prototype);\n    }\n}\n\n// - React Native does not provide `window.location`\n// - Cocos Creator (Native) does not provide `window.location.hostname`\nconst DEFAULT_ENDPOINT =\n    typeof window !== \"undefined\" &&\n    typeof window?.location?.hostname !== \"undefined\"\n        ? `${window.location.protocol.replace(\"http\", \"ws\")}//${\n              window.location.hostname\n          }${window.location.port && `:${window.location.port}`}`\n        : \"ws://127.0.0.1:2567\";\n\nexport class Client {\n    protected endpoint: string;\n    protected _auth: Auth;\n\n    constructor(endpoint: string = DEFAULT_ENDPOINT) {\n        this.endpoint = endpoint;\n    }\n\n    public get auth(): Auth {\n        if (!this._auth) {\n            this._auth = new Auth(this.endpoint);\n        }\n        return this._auth;\n    }\n\n    public async joinOrCreate<T>(\n        roomName: string,\n        options: JoinOptions = {},\n        rootSchema?: SchemaConstructor<T>\n    ) {\n        return await this.createMatchMakeRequest<T>(\n            \"joinOrCreate\",\n            roomName,\n            options,\n            rootSchema\n        );\n    }\n\n    public async create<T>(\n        roomName: string,\n        options: JoinOptions = {},\n        rootSchema?: SchemaConstructor<T>\n    ) {\n        return await this.createMatchMakeRequest<T>(\n            \"create\",\n            roomName,\n            options,\n            rootSchema\n        );\n    }\n\n    public async join<T>(\n        roomName: string,\n        options: JoinOptions = {},\n        rootSchema?: SchemaConstructor<T>\n    ) {\n        return await this.createMatchMakeRequest<T>(\n            \"join\",\n            roomName,\n            options,\n            rootSchema\n        );\n    }\n\n    public async joinById<T>(\n        roomId: string,\n        options: JoinOptions = {},\n        rootSchema?: SchemaConstructor<T>\n    ) {\n        return await this.createMatchMakeRequest<T>(\n            \"joinById\",\n            roomId,\n            options,\n            rootSchema\n        );\n    }\n\n    public async reconnect<T>(\n        roomId: string,\n        sessionId: string,\n        rootSchema?: SchemaConstructor<T>\n    ) {\n        return await this.createMatchMakeRequest<T>(\n            \"joinById\",\n            roomId,\n            { sessionId },\n            rootSchema\n        );\n    }\n\n    public async getAvailableRooms<Metadata = any>(\n        roomName: string = \"\"\n    ): Promise<RoomAvailable<Metadata>[]> {\n        const url = `${this.endpoint.replace(\n            \"ws\",\n            \"http\"\n        )}/matchmake/${roomName}`;\n        return (await get(url, { headers: { Accept: \"application/json\" } }))\n            .data;\n    }\n\n    public async consumeSeatReservation<T>(\n        response: any,\n        rootSchema?: SchemaConstructor<T>\n    ): Promise<Room<T>> {\n        const room = this.createRoom<T>(response.room.name, rootSchema);\n        room.roomId = response.room.roomId;\n        room.sessionId = response.sessionId;\n\n        room.connect();\n\n        return new Promise((resolve, reject) => {\n            const onError = (code, message) =>\n                reject(new ServerError(code, message));\n            room.onError.once(onError);\n\n            room[\"onJoin\"].once(() => {\n                room.onError.remove(onError);\n                resolve(room);\n            });\n        });\n    }\n\n    protected async createMatchMakeRequest<T>(\n        method: string,\n        roomName: string,\n        options: JoinOptions = {},\n        rootSchema?: SchemaConstructor<T>\n    ) {\n        const url = `${this.endpoint.replace(\n            \"ws\",\n            \"http\"\n        )}/matchmake/${method}/${roomName}`;\n\n        // automatically forward auth token, if present\n        if (this._auth && this._auth.hasToken) {\n            options.token = this._auth.token;\n        }\n\n        const response = (\n            await post(url, {\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(options),\n            })\n        ).data;\n\n        if (response.error) {\n            throw new MatchMakeError(response.error, response.code);\n        }\n\n        return this.consumeSeatReservation<T>(response, rootSchema);\n    }\n\n    protected createRoom<T>(\n        roomName: string,\n        rootSchema?: SchemaConstructor<T>\n    ) {\n        return new Room<T>(roomName, rootSchema);\n    }\n\n    protected buildEndpoint(room: any, options: any = {}) {\n        const params = [];\n\n        for (const name in options) {\n            if (!options.hasOwnProperty(name)) {\n                continue;\n            }\n            params.push(`${name}=${options[name]}`);\n        }\n\n        return `${this.endpoint}/${room.processId}/${room.roomId}?${params.join(\n            \"&\"\n        )}`;\n    }\n}\n"],"names":["__extends","Auth","get","ServerError","post","Room"],"mappings":"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"}