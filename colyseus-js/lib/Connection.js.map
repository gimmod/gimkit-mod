{"version":3,"file":"Connection.js","sourceRoot":"","sources":["../src/Connection.ts"],"names":[],"mappings":";;;AACA,uEAAoE;AAEpE,MAAa,UAAU;IAInB;QAFA,WAAM,GAAuB,EAAE,CAAC;QAG5B,IAAI,CAAC,SAAS,GAAG,IAAI,uCAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACzD,CAAC;IAED,IAAI,CAAC,IAAiC;QAClC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,OAAO;QACH,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAED,KAAK,CAAC,IAAa,EAAE,MAAe;QAChC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACvC,CAAC;CACJ;AAnBD,gCAmBC","sourcesContent":["import { ITransport, ITransportEventMap } from \"./transport/ITransport\";\nimport { WebSocketTransport } from \"./transport/WebSocketTransport\";\n\nexport class Connection implements ITransport {\n    transport: ITransport;\n    events: ITransportEventMap = {};\n\n    constructor() {\n        this.transport = new WebSocketTransport(this.events);\n    }\n\n    send(data: ArrayBuffer | Array<number>): void {\n        this.transport.send(data);\n    }\n\n    connect(): void {\n        this.transport.connect();\n    }\n\n    close(code?: number, reason?: string): void {\n        this.transport.close(code, reason);\n    }\n}\n"]}